.PHONY: build clean deploy

build:
	env GOOS=linux go build -ldflags="-s -w" -o bin/handler

clean:
	rm -rf ./bin

deploy: clean build
	sls deploy --verbose


# make m="Test make patch" patch
# Note that for this to work it requires an existing version.
# An existing version can be created e.g. by firstversion below
patch:
	$(eval VERSION=$(shell git describe --tags --abbrev=0 | awk -F. '{$$NF+=1; OFS="."; print $0}'))
	git add .
	git commit -m "$m"
	git push origin master
	git tag -a $(VERSION) -m "New autogenerated patch release"
	git push origin $(VERSION)

firststableversion:
	git add .
	git commit -m "First stable version"
	git push origin master
	git tag -a v1.0.0 -m "First stable version"
	git push origin v1.0.0

firstdevversion:
	git add .
	git commit -m "First dev version"
	git push origin master
	git tag -a v0.0.1 -m "First dev version"
	git push origin v0.0.1

# upgrades all the direct and indirect dependencies of the module.
updatedeps:
	go get -u -t ./...

# If the subfolder contained tests we would need to change this to go test ./...
test:
	go test